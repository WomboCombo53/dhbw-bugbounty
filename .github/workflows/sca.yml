name: SCA - Dependency Scanning

on:
  workflow_call:

jobs:
  sca:
    name: SCA - ${{ matrix.component }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    strategy:
      matrix:
        component: [frontend, backend]
        include:
          - component: frontend
            path: ./frontend
            node-version: '22'
          - component: backend
            path: ./backend
            node-version: '22'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ${{ matrix.path }}
        run: npm ci

      - name: Run npm audit
        id: npm-audit
        working-directory: ${{ matrix.path }}
        run: |
          npm audit --audit-level=moderate --json > audit-results.json || true
          cat audit-results.json

      - name: Scan dependencies with Trivy
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'fs'
          scan-ref: ${{ matrix.path }}
          format: 'sarif'
          output: 'trivy-results-${{ matrix.component }}.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-${{ matrix.component }}.sarif'

      - name: Show dependency tree for vulnerabilities
        if: always()
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: 'fs'
          scan-ref: ${{ matrix.path }}
          format: 'table'
          severity: 'CRITICAL,HIGH'

      - name: Check for high severity vulnerabilities via npm audit
        id: check-vulns
        working-directory: ${{ matrix.path }}
        run: |
          npm audit --audit-level=high --json > audit-check.json || true
          HIGH_VULNS=$(jq '.metadata.vulnerabilities.high // 0' audit-check.json)
          CRITICAL_VULNS=$(jq '.metadata.vulnerabilities.critical // 0' audit-check.json)
          echo "high_vulns=$HIGH_VULNS" >> $GITHUB_OUTPUT
          echo "critical_vulns=$CRITICAL_VULNS" >> $GITHUB_OUTPUT
          
          echo "## ${{ matrix.component }} Dependency Vulnerability Scan 
          ðŸ”“ Found $CRITICAL_VULNS critical and $HIGH_VULNS high severity vulnerabilities" >> $GITHUB_STEP_SUMMARY


      - name: Upload audit results
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: audit-results-${{ matrix.component }}
          path: |
            ${{ matrix.path }}/audit-results.json
            ${{ matrix.path }}/audit-check.json
